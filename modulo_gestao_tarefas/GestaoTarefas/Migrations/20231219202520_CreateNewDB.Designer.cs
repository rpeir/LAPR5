// <auto-generated />
using System;
using GestaoTarefas.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoTarefas.Migrations
{
    [DbContext(typeof(GestaoTarefasDbContext))]
    [Migration("20231219202520_CreateNewDB")]
    partial class CreateNewDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GestaoTarefas.Domain.TaskRequests.TaskRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("DeliveryRoomId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PickupRoomId")
                        .HasColumnType("char(36)");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("TaskRequests");

                    b.HasDiscriminator<string>("Type");
                });

            modelBuilder.Entity("GestaoTarefas.Domain.Tasks.Task", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("DeliveryRoomId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PickupRoomId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("TaskRequestId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TaskRequestId")
                        .IsUnique();

                    b.ToTable("Tasks");

                    b.HasDiscriminator<string>("Type");
                });

            modelBuilder.Entity("GestaoTarefas.Domain.TaskRequests.DeliveryTaskRequest", b =>
                {
                    b.HasBaseType("GestaoTarefas.Domain.TaskRequests.TaskRequest");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ReceiverContact")
                        .HasColumnType("longtext");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("longtext");

                    b.Property<string>("SenderContact")
                        .HasColumnType("longtext");

                    b.Property<string>("SenderName")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Delivery");
                });

            modelBuilder.Entity("GestaoTarefas.Domain.TaskRequests.SurveillanceTaskRequest", b =>
                {
                    b.HasBaseType("GestaoTarefas.Domain.TaskRequests.TaskRequest");

                    b.Property<string>("EmergencyNumber")
                        .HasColumnType("longtext");

                    b.Property<Guid>("FloorId")
                        .HasColumnType("char(36)");

                    b.HasDiscriminator().HasValue("Surveillance");
                });

            modelBuilder.Entity("GestaoTarefas.Domain.Tasks.DeliveryTask", b =>
                {
                    b.HasBaseType("GestaoTarefas.Domain.Tasks.Task");

                    b.Property<string>("ConfirmationCode")
                        .HasColumnType("longtext");

                    b.Property<string>("ReceiverContact")
                        .HasColumnType("longtext");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("longtext");

                    b.Property<string>("SenderContact")
                        .HasColumnType("longtext");

                    b.Property<string>("SenderName")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Delivery");
                });

            modelBuilder.Entity("GestaoTarefas.Domain.Tasks.SurveillanceTask", b =>
                {
                    b.HasBaseType("GestaoTarefas.Domain.Tasks.Task");

                    b.Property<string>("EmergencyNumber")
                        .HasColumnType("longtext");

                    b.Property<Guid>("FloorId")
                        .HasColumnType("char(36)");

                    b.HasDiscriminator().HasValue("Surveillance");
                });

            modelBuilder.Entity("GestaoTarefas.Domain.Tasks.Task", b =>
                {
                    b.HasOne("GestaoTarefas.Domain.TaskRequests.TaskRequest", null)
                        .WithOne()
                        .HasForeignKey("GestaoTarefas.Domain.Tasks.Task", "TaskRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
