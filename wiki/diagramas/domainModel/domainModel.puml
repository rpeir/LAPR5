@startuml Domain Model

title "Domain Model"
' left to right direction
' top to bottom direction
skinparam Padding 10
skinparam Nodesep 80
skinparam ranksep 100
skinparam groupInheritance 1
' skinparam linetype ortho
skinparam separation 1000
skinparam NoteBackgroundColor #A9A9A9
skinparam PackageStyle rectangle
skinparam package {
    BackgroundColor #D3D3D3
    FontStyle bold
}

hide circle
hide methods

    entity Robot {
        -serialNumber
        -code
        -state
        -nickname
        -description
    }

    entity RobotType {
        - typeName
        - brand
        - model
    }

    enum TaskType {}
    note bottom of TaskType {
            - Surveillance
            - Delivery
    }

    interface Task {
        - code
        - description

    }

    entity SurveillanceTask {
        - emergencyNumber
    }

    entity DeliveryTask {
        - senderName
        - receiverName
        - senderContact
        - receiverContact
        - confirmationCode
    }

    entity Building {
        - code
        - name
        - description
        - dimensions
    }

    entity Floor {
        - floorNr
        - description
        - floorMap
    }

    entity Elevator {
        - identificationNumber
        - brand
        - model
        - serialNumber
        - description
    }

    entity Room {
        - name
        - description
    }

    enum RoomCategory {}

    note bottom of RoomCategory {
            - Classroom
            - Office
            - Laboratory
            - Auditorium
    }

    entity Pathway {
    }

SurveillanceTask ..|> Task: extends
DeliveryTask ..|> Task: extends

Room --> RoomCategory: is of a
Room --> Building : is in

RobotType --> "*" TaskType: executes

Floor --> Building: is on
Floor "*" <-- Elevator : serves
Floor <-- Room: is on

Elevator --> Building: is on

Task --> Room: delivery
Task --> Room: pickup
Task --> User : executed by

SurveillanceTask --> Floor: is executed on

Pathway --> "2" Floor: connects

Robot --> RobotType : is of a

Task --> TaskType : is of a

Robot ..> "*" Task : executes

@enduml
